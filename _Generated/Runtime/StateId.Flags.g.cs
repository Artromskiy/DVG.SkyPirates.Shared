//------------------------------------------------------------------------------
// <auto-generated>
//
// This code was generated by a tool.
// Path: ..\..\..\Generators\StringIdFlagsGenerator.cs
//
// Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated.
// 
// </auto-generated>
//------------------------------------------------------------------------------

using DVG.Core;
using System;

namespace DVG.SkyPirates.Shared.Ids
{
    partial struct StateId
    {
        public interface IFlag { }

        public static partial class Flags
        {
            public readonly struct PreAttack : IFlag { }
            public readonly struct PostAttack : IFlag { }
            public readonly struct Reload : IFlag { }
            
            public static void ForEachFlag<T>(T action) where T: IGenericAction
            {
                action.Invoke<PreAttack>();
                action.Invoke<PostAttack>();
                action.Invoke<Reload>();
            }
        }

        public void GenericCall<T>(T action)
            where T : IGenericAction<IFlag>
        {
            _ = this.Value switch
            {
                nameof(Flags.PreAttack) => GenericCallWrap<Flags.PreAttack, T>(action),
                nameof(Flags.PostAttack) => GenericCallWrap<Flags.PostAttack, T>(action),
                nameof(Flags.Reload) => GenericCallWrap<Flags.Reload, T>(action),
                _ => throw new NotImplementedException()
            };
        }

        private static int GenericCallWrap<K, T>(T action)
            where T : IGenericAction<IFlag>
            where K : IFlag
        {
            action.Invoke<K>();
            return 0;
        }
    }

    partial struct StateId<T> where T: StateId.IFlag { }
}
