//------------------------------------------------------------------------------
// <auto-generated>
//
// This code was generated by a tool.
// Path: ..\..\..\Generators\CommandGenerator.cs
//
// Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated.
// 
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using DVG.SkyPirates.Shared.Commands;

namespace DVG.Core.Commands
{
    public static class CommandIds
    {
        private static readonly Dictionary<Type, int> _typeToId;
        private static readonly Dictionary<int, Type> _idToType;

        static CommandIds()
        {
            _typeToId = new Dictionary<Type, int>()
            {
                {typeof(DirectionCommand), 1},
                {typeof(FixationCommand), 2},
                {typeof(LoadWorldCommand), 3},
                {typeof(SpawnSquadCommand), 4},
                {typeof(SpawnUnitCommand), 5},
            };
            
            _idToType = new Dictionary<int, Type>()
            {
                {1, typeof(DirectionCommand)},
                {2, typeof(FixationCommand)},
                {3, typeof(LoadWorldCommand)},
                {4, typeof(SpawnSquadCommand)},
                {5, typeof(SpawnUnitCommand)},
            };
        }

        
        public static void ForEachData<T>(ref T action)
            where T: IGenericAction<ICommandData>
        {
            action.Invoke<DirectionCommand>();
            action.Invoke<FixationCommand>();
            action.Invoke<LoadWorldCommand>();
            action.Invoke<SpawnSquadCommand>();
            action.Invoke<SpawnUnitCommand>();
        }

        public static int GetId<T>() => _typeToId[typeof(T)];
        public static Type GetCommand(ushort id) => _idToType[id];
    }
}

